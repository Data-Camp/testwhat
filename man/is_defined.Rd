% Generated by roxygen2 (4.0.2): do not edit by hand
\name{is_defined}
\alias{expect_defined}
\alias{is_defined}
\title{Expectation: is an object defined?}
\usage{
is_defined(env = .GlobalEnv)

expect_defined(object, env = .GlobalEnv, info = NULL, label = NULL,
  failure_msg = NULL, success_msg = NULL)
}
\arguments{
\item{env}{environment in which to look for the object.}

\item{object}{name of the object to test}

\item{info}{extra information to be included in the feedback message
(useful when writing tests in loops).}

\item{label}{object label used in the default feedback message.  If
\code{NULL}, the object name is used.  This is ignored for feedback
messages supplied via \code{failure_msg} or \code{success_msg}.}

\item{failure_msg}{feedback message in case of a failed test.}

\item{success_msg}{feedback message in case of a successful test.}
}
\description{
Tests whether or not an object is defined in a certain environment.
}
\examples{
a <- matrix(1:10, nrow = 5)
expect_that("a", is_defined())
expect_defined("a")
}
\seealso{
\code{\link{exists}}

Other expectations: \code{\link{equals}},
  \code{\link{expect_equal}}; \code{\link{expect-compare}},
  \code{\link{expect_less_than}},
  \code{\link{expect_more_than}},
  \code{\link{is_less_than}}, \code{\link{is_more_than}};
  \code{\link{expect_equivalent}},
  \code{\link{is_equivalent_to}};
  \code{\link{expect_error}}, \code{\link{throws_error}};
  \code{\link{expect_false}}, \code{\link{is_false}};
  \code{\link{expect_identical}},
  \code{\link{is_identical_to}}; \code{\link{expect_is}},
  \code{\link{is_a}}; \code{\link{expect_match}},
  \code{\link{matches}}; \code{\link{expect_message}},
  \code{\link{shows_message}}; \code{\link{expect_named}},
  \code{\link{has_names}}; \code{\link{expect_null}},
  \code{\link{is_null}}; \code{\link{expect_output}},
  \code{\link{prints_text}}; \code{\link{expect_true}},
  \code{\link{is_true}}; \code{\link{expect_warning}},
  \code{\link{gives_warning}};
  \code{\link{takes_less_than}}
}

