% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/test-function-v2.R
\name{test_function_v2}
\alias{test_function_v2}
\title{Test whether a student correctly called a function (V2)}
\usage{
test_function_v2(name, args = NULL, ignore = NULL, allow_extra = TRUE,
  eval = TRUE, index = NULL, eq_condition = "equivalent",
  student_code = get_student_code(), solution_code = get_solution_code(),
  student_env = .GlobalEnv, solution_env = get_solution_env(),
  not_called_msg = NULL, incorrect_msg = NULL,
  incorrect_number_of_calls_msg = NULL, index_not_called_msg = NULL)
}
\arguments{
\item{name}{name of the function to test.}

\item{args}{character vector of argument names that the student should have
supplied in the function calls.  If no argument names are given, it is only
tested whether the student called the function at least as many times as in
the sample solution.}

\item{ignore}{character vector of argument names that should not be tested
(useful in combination with \code{allow_extra = FALSE} to allow certain
arguments to be ignored, but not others).}

\item{allow_extra}{indicates whether extra arguments not specified by
\code{args} or \code{ignore} are allowed in the student's function calls.}

\item{eval}{logical vector indicating whether the corresponding argument
should be evaluated before testing.  Setting this to \code{FALSE} can be
useful, e.g., to test whether the student supplied a large predefined
object, as only the corresponding \code{\link{name}} is compared in this
case (use with care!).}

\item{index}{Which command to check on (both in solution and student).
If index is specified, it is checked whether solution and student contain
the same amount of commands. index = NULL by default, i.e. the entire submission is checked.}

\item{eq_condition}{character vector indicating how to perform the
comparison for each argument.  Possible values are \code{"equivalent"}
(the default), \code{"equal"} and \code{"identical"}.  See
\code{\link{is_equivalent_to}}, \code{\link{equals}}, and
\code{\link{is_identical_to}}, respectively.}

\item{student_code}{character string containing the student's code.}

\item{solution_code}{character string containing the sample solution code.}

\item{student_env}{environment in which the student's code was evaluated.}

\item{solution_env}{environment in which the sample solution code was
evaluated.}

\item{not_called_msg}{feedback message in case the student did not call the
function at least as often as in the solution code.}

\item{incorrect_msg}{feedback message in case the student did not call the
function with the same argument values as in the sample solution.  If
there are multiple function calls in the sample solution, a vector of
feedback messages can be supplied.}

\item{incorrect_number_of_calls_msg}{feedback message in case the number of commands
in the solution does not correspond to the solution. (only used if index is not NULL.)}
}
\description{
Test whether a student called a function with certain arguments as least as
many times as in a sample solution.  If yes, test for each function call in
the sample solution whether the student called the function with the same
argument values.
}
\details{
This test is implemented using \code{\link{test_what}}.  When testing
whether argument values are the same, small numeric differences or
differences in attributes are allowed.

See vignette \code{"testwhat-intro"} for examples.
}
\examples{
\dontrun{
# Suppose the solution contains: mean(1:3, na.rm = TRUE)
# To test this submission, provide the following in the sct
test_function("mean", c("x", "na.rm"))
}

# Other examples: see SCT design guide
}

