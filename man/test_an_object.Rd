% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/test-an-object.R
\name{test_an_object}
\alias{test_an_object}
\title{This function is an adaption of \code{\link{test_object}}. The function will
check if a specific object, defined in the solution, exists. The difference
here is that the object does not require the same variable name. In other words,
this function will check if any defined variable by the user corresponds to
a specific variable in the solution code.}
\usage{
test_an_object(name, undefined_msg, eq_condition = "equivalent",
  student_env = .GlobalEnv, solution_env = get_solution_env())
}
\arguments{
\item{name}{name of the object to test.}

\item{undefined_msg}{feedback message in case the student did not define
an object which corresponds to the solution object. This parameter should
always be used by the sct designer, since the function is used in very
specific cases.}

\item{eq_condition}{character string indicating how to compare the
objects.  Possible values are \code{"equivalent"} (the default),
\code{"equal"} and \code{"identical"}.  See \code{\link{is_equivalent_to}},
\code{\link{equals}}, and \code{\link{is_identical_to}}, respectively.}

\item{student_env}{environment in which the student's code was evaluated.}

\item{solution_env}{environment in which the sample solution code was
evaluated.}
}
\description{
This test is implemented using \code{\link{test_that}}.  Whether the
student's object and the sample solution object are the same is tested with
\code{\link{is_equivalent_to}}, hence small numeric differences or
differences in attributes are allowed.
}
\details{
See vignette \code{"testwhat-intro"} for examples.
}
\examples{
\dontrun{
# Suppose the solution contains: x <- mean(1:3, na.rm = TRUE)
# To test this submission, provide the following in the sct
test_function("x")
}

# Other examples: see SCT design guide
}

